{
	"pipeline.lumi_lights.name": "Lumi Lights LITE",
	"pipeline.lumi_lights.desc": "Lumi Lights without shadows",

	"pipeline.lumi_lights_deluxe.name": "Lumi Lights",
	"pipeline.lumi_lights_deluxe.desc": "Lumi Lights with shadows",

	"config.lumi_lights.category.shadow": "Shadows",
	"config.lumi_lights.value.shadow_resolution": "Shadow resolution",
	"config.lumi_lights.help.shadow_resolution": "Resolution of the shadow map in pixels",
	"config.lumi_lights.value.shadow_angle": "Sun zenith angle",
	"config.lumi_lights.help.shadow_angle": "Zenith angle of the sun and moon. Affects shadow length and angle",
	"config.lumi_lights.value.filter_shadows": "Shadow smoothing",
	"config.lumi_lights.help.filter_shadows": "Smoother shadows",
	"config.lumi_lights.value.name_tag_shadow": "Name tag shadow",
	"config.lumi_lights.help.name_tag_shadow": "Render name tag shadow",

	"config.lumi_lights.category.lighting": "Lighting",
	"config.lumi_lights.value.outdoors_brightness": "Sun light brightness",
	"config.lumi_lights.help.outdoors_brightness": "Brightness of the sun",
	"config.lumi_lights.value.block_light_mode": "Block light color",
	"config.lumi_lights.help.block_light_mode": "Color of block light",
	"config.lumi_lights.value.handheld_light_radius": "Held light radius",
	"config.lumi_lights.help.handheld_light_radius": "Max reach of held light source. Set to 0 to disable",
	"config.lumi_lights.value.indoors_brightness": "Block light brightness",
	"config.lumi_lights.help.indoors_brightness": "Brightness of block light source",
	"config.lumi_lights.value.lightning_flash_brightness": "Lightning flash brightness",
	"config.lumi_lights.help.lightning_flash_brightness": "Brightness of sky flashing whenever lightning strikes",
	"config.lumi_lights.value.ambient_brightness": "Base ambient brightness",
	"config.lumi_lights.help.ambient_brightness": "Base ambient light for all dimensions",
	"config.lumi_lights.value.sky_ambient_brightness": "Noon ambient brightness",
	"config.lumi_lights.help.sky_ambient_brightness": "Ambient light from the sky at noon",
	"config.lumi_lights.value.nether_ambient_brightness": "Nether ambient brightness",
	"config.lumi_lights.help.nether_ambient_brightness": "Ambient light from the lava lakes in the nether",
	"config.lumi_lights.value.end_ambient_brightness": "The End-like ambient brightness",
	"config.lumi_lights.help.end_ambient_brightness": "Ambient light in dimensions without sky, like the End",
	"config.lumi_lights.value.night_ambient_brightness": "Nighttime ambient brightness",
	"config.lumi_lights.help.night_ambient_brightness": "Brightness of the moon",

	"config.lumi_lights.category.effects": "Performance",
	"config.lumi_lights.value.ss_reflection": "Screen-space reflection",
	"config.lumi_lights.help.ss_reflection": "Expensive raymarched reflection",
	"config.lumi_lights.value.ss_ao": "Screen-space ambient occlusion",
	"config.lumi_lights.help.ss_ao": "Very expensive approximated local shadows",
	"config.lumi_lights.value.combine_vanilla_ao": "Combine vanilla ambient occlusion",
	"config.lumi_lights.help.combine_vanilla_ao": "Combine vanilla and screen-space AO. Recommended ON, but try turning it off in case of random dark spots occurring",
	"config.lumi_lights.value.volumetric_clouds": "Volumetric clouds",
	"config.lumi_lights.help.volumetric_clouds": "Expensive volumetric clouds",
	"config.lumi_lights.value.volumetric_fog": "Volumetric fog",
	"config.lumi_lights.help.volumetric_fog": "Expensive volumetric fog",
	"config.lumi_lights.value.bloom_effect": "Bloom effect",
	"config.lumi_lights.help.bloom_effect": "Emulate eye lens bloom",
	"config.lumi_lights.value.high_quality_bloom": "High quality bloom",
	"config.lumi_lights.help.high_quality_bloom": "Expensive but nicer bicubic filtering",
	"config.lumi_lights.value.water_waves": "Water waves",
	"config.lumi_lights.help.water_waves": "Animated water waves texture",
	"config.lumi_lights.value.water_caustics": "Water caustics effect",
	"config.lumi_lights.help.water_caustics": "Emulate water caustics",
	"config.lumi_lights.value.water_foam": "Water foam effect",
	"config.lumi_lights.help.water_foam": "Emulate water foam around objects",
	"config.lumi_lights.value.refraction_effect": "Refraction effect",
	"config.lumi_lights.help.refraction_effect": "Distort objects behind water and glass",
	"config.lumi_lights.value.reflection_oversampling": "SS Reflection oversampling",
	"config.lumi_lights.help.reflection_oversampling": "Over-sample screen space reflection which may help fill gaps in the reflection",
	"config.lumi_lights.value.reflection_maximum_roughness_relative": "Reflection roughness threshold",
	"config.lumi_lights.help.reflection_maximum_roughness_relative": "Limits screen space reflection based on roughness (water=1, dirt=10). Lower to improve performance",
	"config.lumi_lights.value.bloom_intensity": "Bloom intensity",
	"config.lumi_lights.help.bloom_intensity": "Intensity of bloom effect",
	"config.lumi_lights.value.bloom_scale": "Bloom radius",
	"config.lumi_lights.help.bloom_scale": "Radius of bloom effect",

	"config.lumi_lights.category.ssao": "Ambient Occlusion",
	"config.lumi_lights.value.ssao_override": "SSAO parameter override",
	"config.lumi_lights.help.ssao_override": "Override built-in parameters with values below. For development purpose only",
	"config.lumi_lights.value.ssao_num_steps": "SSAO - Precision",
	"config.lumi_lights.help.ssao_num_steps": "Number of sampling steps, affects precision (HIGH performance impact)",
	"config.lumi_lights.value.ssao_num_directions": "SSAO - Quality",
	"config.lumi_lights.help.ssao_num_directions": "Number of sampling directions, affects quality (HIGH performance impact)",
	"config.lumi_lights.value.ssao_radius": "SSAO influence radius",
	"config.lumi_lights.help.ssao_radius": "Influence radius of SSAO in 1/10th blocks unit",
	"config.lumi_lights.value.ssao_bias": "SSAO - Angle Bias",
	"config.lumi_lights.help.ssao_bias": "Angle bias in radians, helps reduce artifact",
	"config.lumi_lights.value.ssao_intensity": "SSAO intensity",
	"config.lumi_lights.help.ssao_intensity": "Intensity of the SSAO effect",
	"config.lumi_lights.value.ssao_glow": "SSAO - Glow occlusion",
	"config.lumi_lights.help.ssao_glow": "Also calculate color imparted by glowing objects",

	"config.lumi_lights.category.sky": "Sky",
	"config.lumi_lights.value.sky_mode": "Sky mode",
	"config.lumi_lights.help.sky_mode": "Choose between different skybox rendering modes",
	"config.lumi_lights.value.lumi_sky_color": "Lumi Sky - Color",
	"config.lumi_lights.help.lumi_sky_color": "Sky color (Lumi sky mode)",
	"config.lumi_lights.value.lumi_sky_red": "Lumi Sky - Custom R",
	"config.lumi_lights.help.lumi_sky_red": "Sky red value (Lumi sky custom color mode)",
	"config.lumi_lights.value.lumi_sky_green": "Lumi Sky - Custom G",
	"config.lumi_lights.help.lumi_sky_green": "Sky green value (Lumi sky custom color mode)",
	"config.lumi_lights.value.lumi_sky_blue": "Lumi Sky - Custom B",
	"config.lumi_lights.help.lumi_sky_blue": "Sky blue value (Lumi sky custom color mode)",
	"config.lumi_lights.value.lumi_star_size": "Lumi Sky - Star Size",
	"config.lumi_lights.help.lumi_star_size": "Size of stars (Lumi or starry sky mode)",
	"config.lumi_lights.value.lumi_star_density": "Lumi Sky - Star Density",
	"config.lumi_lights.help.lumi_star_density": "Density of stars (Lumi or starry sky mode)",
	"config.lumi_lights.value.lumi_star_brightness": "Lumi Sky - Star Brightness",
	"config.lumi_lights.help.lumi_star_brightness": "Brightness of stars (Lumi or starry sky mode)",

	"config.lumi_lights.category.clouds": "Clouds",
	"config.lumi_lights.value.volumetric_cloud_altitude": "Volumetric clouds - Altitude",
	"config.lumi_lights.help.volumetric_cloud_altitude": "Altitude of volumetric clouds in the sky",
	"config.lumi_lights.value.volumetric_cloud_mode": "Volumetric clouds - Render mode",
	"config.lumi_lights.help.volumetric_cloud_mode": "Volumetric clouds rendering mode. Skybox clouds are generally faster",
	"config.lumi_lights.value.cloud_coverage_relative": "Volumetric clouds - Cloud coverage",
	"config.lumi_lights.help.cloud_coverage_relative": "Base sky coverage for volumetric clouds",
	"config.lumi_lights.value.cloud_puffiness_relative": "Volumetric clouds - Puffiness",
	"config.lumi_lights.help.cloud_puffiness_relative": "Volumetric clouds puffiness",

	"config.lumi_lights.category.fog": "Fog",
	"config.lumi_lights.value.fog_far_chunks": "Fog chunks distance",
	"config.lumi_lights.help.fog_far_chunks": "Distance where fog gets the thickest in chunks",
	"config.lumi_lights.value.fog_density_relative": "Fog density",
	"config.lumi_lights.help.fog_density_relative": "Overall density of the fog",
	"config.lumi_lights.value.underwater_fog_far_chunks": "Fog chunks distance (underwater)",
	"config.lumi_lights.help.underwater_fog_far_chunks": "Distance where fog gets the thickest in chunks (underwater)",

	"config.lumi_lights.category.aesthetics": "Miscellaneous",
	"config.lumi_lights.value.water_color": "Water color mode",
	"config.lumi_lights.help.water_color": "Whether to retain water texture and color",
	"config.lumi_lights.value.hurt_mode": "Hurt entity rendering",
	"config.lumi_lights.help.hurt_mode": "Different ways to convey violence",
	"config.lumi_lights.value.glint_mode": "Enchantment glint mode",
	"config.lumi_lights.help.glint_mode": "Switch between texture-based or shader-based enchantment glint",
	"config.lumi_lights.value.glint_style": "Glint Shader - Style",
	"config.lumi_lights.help.glint_style": "Style of enchantment glint (shader mode)",
	"config.lumi_lights.value.glint_red": "Glint Shader - R",
	"config.lumi_lights.help.glint_red": "Enchantment glint red value (shader mode)",
	"config.lumi_lights.value.glint_green": "Glint Shader - G",
	"config.lumi_lights.help.glint_green": "Enchantment glint green value (shader mode)",
	"config.lumi_lights.value.glint_blue": "Glint Shader - B",
	"config.lumi_lights.help.glint_blue": "Enchantment glint blue value (shader mode)",
	"config.lumi_lights.value.toon_outline": "Toon outline",
	"config.lumi_lights.help.toon_outline": "Render \"toon\" style object outline",
	"config.lumi_lights.value.small_hand": "Tiny hands",
	"config.lumi_lights.help.small_hand": "Smaller player hands on first person view",

	"config.lumi_lights.category.experimental": "Experiments",
	"config.lumi_lights.value.shadow_workaround": "Shadow workaround",
	"config.lumi_lights.help.shadow_workaround": "Workaround to fix patches in shadow map",
	"config.lumi_lights.value.multi_bounce_reflection": "Multi bounce reflection",
	"config.lumi_lights.help.multi_bounce_reflection": "Use temporal data to simulate multi-bounce reflection",
	"config.lumi_lights.value.kaleidoskop": "Kaleidoskop",
	"config.lumi_lights.help.kaleidoskop": "K a l e i d o s k o p i k	r e f l e k t i f	m e t a l i k	b l o k",
	"config.lumi_lights.value.rain_puddles": "Rain puddles effect",
	"config.lumi_lights.help.rain_puddles": "Wet ground during rain",
	"config.lumi_lights.value.exposure_func": "Exposure function",
	"config.lumi_lights.help.exposure_func": "Exposure compute function. Default is median",
	"config.lumi_lights.value.antialiasing": "Anti-alias and denoising",
	"config.lumi_lights.help.antialiasing": "Filtering technique to remove noise and jagged edges",
	"config.lumi_lights.value.tonemap_operator": "Tone mapping operator",
	"config.lumi_lights.help.tonemap_operator": "Different ways to map HDR colors to the monitor",
	"config.lumi_lights.value.post_tmo_brightness": "Alternative brightness",
	"config.lumi_lights.help.post_tmo_brightness": "Post-brightness when TMO is not set to default",
	"config.lumi_lights.value.post_tmo_contrast": "Alternative contrast",
	"config.lumi_lights.help.post_tmo_contrast": "Post-contrast when TMO is not set to default",
	"config.lumi_lights.value.post_tmo_saturation": "Alternative saturation",
	"config.lumi_lights.help.post_tmo_saturation": "Post-saturation when TMO is not set to default",
	"config.lumi_lights.value.color_gamma": "Color gamma",
	"config.lumi_lights.help.color_gamma": "Gamma value used when converting between sRGB and linear color",
	"config.lumi_lights.value.albedo_brightening": "Albedo brightening",
	"config.lumi_lights.help.albedo_brightening": "Brighten the texture before any lighting is applied",

	"config.lumi_lights.category.debug": "Debug",
	"config.lumi_lights.value.disable_entities": "Disable entities",
	"config.lumi_lights.help.disable_entities": "Disable entities rendering",
	"config.lumi_lights.value.water_noise_debug": "Water noise overlay",
	"config.lumi_lights.help.water_noise_debug": "Show water noise sampling as overlay",
	"config.lumi_lights.value.white_world": "Copied_City",
	"config.lumi_lights.help.white_world": "Render the world with white albedo",
	"config.lumi_lights.value.dithering_mode": "Dithering mode",
	"config.lumi_lights.help.dithering_mode": "Noise technique used for dithering AO, reflection, and volumetrics. Blue noise requires texture loading support",
	"config.lumi_lights.value.taa_debug_render": "TAA buffer debug",
	"config.lumi_lights.help.taa_debug_render": "Render TAA debug buffers instead of the game",
	"config.lumi_lights.value.exposure_debug": "Exposure indicator",
	"config.lumi_lights.help.exposure_debug": "Show indicator of exposure value",
	"config.lumi_lights.value.cloud_time": "Cloud movement sync",
	"config.lumi_lights.help.cloud_time": "Whether volumetric cloud synchronizes with client time or in-game world time",
	"config.lumi_lights.value.overlay_debug": "Overlay debug",
	"config.lumi_lights.help.overlay_debug": "Separate overlays by rendering them differently",

	"_comment_": "No trailing comma"
}
